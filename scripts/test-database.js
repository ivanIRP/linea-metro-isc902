// Script para probar la conectividad de la base de datos
const { PrismaClient } = require('@prisma/client')

const prisma = new PrismaClient()

async function testDatabase() {
  console.log('üîç Probando conexi√≥n a la base de datos...')
  
  try {
    // Probar conexi√≥n b√°sica
    await prisma.$connect()
    console.log('‚úÖ Conexi√≥n a MySQL exitosa')
    
    // Probar que las tablas existen
    const lineasCount = await prisma.linea.count()
    const trenesCount = await prisma.tren.count()
    const estacionesCount = await prisma.estacion.count()
    
    console.log(`üìä Datos encontrados:`)
    console.log(`   ‚Ä¢ ${lineasCount} l√≠neas de metro`)
    console.log(`   ‚Ä¢ ${trenesCount} trenes`)
    console.log(`   ‚Ä¢ ${estacionesCount} estaciones`)
    
    if (lineasCount === 0) {
      console.log('‚ö†Ô∏è  La base de datos est√° vac√≠a. Ejecuta: npm run db:seed')
    } else {
      console.log('‚úÖ Base de datos poblada correctamente')
    }
    
    // Probar una consulta m√°s compleja
    const lineasConDetalles = await prisma.linea.findMany({
      include: {
        _count: {
          select: {
            trenes: true,
            estacionesRel: true,
          }
        }
      }
    })
    
    console.log('\nüìã L√≠neas configuradas:')
    lineasConDetalles.forEach(linea => {
      console.log(`   ‚Ä¢ ${linea.nombre} - ${linea.estado} (${linea._count.trenes} trenes, ${linea._count.estacionesRel} estaciones)`)
    })
    
    console.log('\nüéâ ¬°Todos los tests pasaron! La base de datos est√° funcionando correctamente.')
    
  } catch (error) {
    console.error('‚ùå Error de conexi√≥n:', error.message)
    
    if (error.code === 'P1001') {
      console.log('\nüí° Soluciones posibles:')
      console.log('   1. Aseg√∫rate de que XAMPP est√© ejecut√°ndose')
      console.log('   2. Verifica que MySQL est√© activo en el panel de XAMPP')
      console.log('   3. Confirma que el puerto 3306 est√© disponible')
      console.log('   4. Revisa la configuraci√≥n en el archivo .env')
    } else if (error.code === 'P1003') {
      console.log('\nüí° La base de datos "metro_sistema" no existe.')
      console.log('   Cr√©ala en phpMyAdmin o ejecuta: npx prisma db push')
    }
    
    process.exit(1)
  } finally {
    await prisma.$disconnect()
  }
}

testDatabase()